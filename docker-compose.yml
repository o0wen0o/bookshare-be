version: "3"
services:
  app:
    image: spring/bookshare-be:latest
    container_name: 'bookshare-be'
    build:
      context: ./
      dockerfile: Dockerfile
#    environment:
#      SPRING_PROFILES_ACTIVE: prod
#      SPRING_RABBITMQ_HOST: rabbitmq
#      SPRING_DATA_REDIS_HOST: redis
#      MYSQL_HOST: mysql
#      MYSQL_USER: root
#      MYSQL_PASSWORD: root
    ports:
      - '8081:8081'
    depends_on:
      - mysql
    networks:
      - bookshare-be

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123123
    ports:
      - '3307:3306'
    volumes:
      - ./pub-technology/mysql-data:/var/lib/mysql
    networks:
      - bookshare-be

#  nginx:
#    image: nginx:latest
#    container_name: nginx
#    ports:
#      - '80:80'
#    volumes:
#      - ./pub-technology/nginx:/nginx.conf
#    entrypoint:
#      - nginx
#    command:
#      - -g
#      - daemon off;
#    networks:
#      - bookshare-be

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ
      - "15672:15672" # RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    networks:
      - bookshare-be

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - bookshare-be

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    volumes:
      - ./pub-technology/zookeeper/data:/data
      - ./pub-technology/zookeeper/datalog:/datalog
    networks:
      - bookshare-be

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./pub-technology/kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      - bookshare-be

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: dev
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - bookshare-be

networks:
  bookshare-be:
    driver: bridge